import 'dart:convert';

import 'package:http/http.dart' as http;
import 'package:googleapis_auth/auth_io.dart' as auth;
class PushNotificationServices {
  Future<String> getAccessToken() async {
    final serviceAccountJson = {
      "type": "service_account",
      "project_id": "final-calling-pro",
      "private_key_id": "f2fb22119ff33aa04627a765d8088653466802ff",
      "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCybLUCF+o6/beX\nkPmh3n905mFKt+9u+b0UFqy5qqxl4t4QlsIUPByL4g4xz67KROi+QYU5UMkpr6fV\nWWXWCppBTdH8YM7/BJr7vv4MrAX1aKYVun+bxKkUQHS+6KWiUFRUEVGTkNfoc7XC\nVfMGl1bkl3++7Qk1aqPtqH6NdxyPDjm3BtsalyZ8kqT9ZmEYkCI8zJZ3K09QEvlL\nlKpXNF+bbvp56eOiFNIIfhYNa2DVyjt2axPjAHB8MAYAkiPHT2rti2jOPsa5UfiZ\n1n1CEIi/gGfTtqt7RsCl6xWJx4usxhqlPRTRdK0sYIVXOLfugcFwgDOItCoKRTGJ\ny3PuHykRAgMBAAECgf9voT5I5lglkEIiZxHHtEJfYRkoe5Z8WBjJThEYGIVujqy2\nCZxjYeMk9smVYIUlskyWEWgd8+08/NPZ0j9kgD2s8y3tjflJPsMNvkYz/MG9neZL\nXI4kvBBiG0bvf57MGSCpeCxm/A1ujEurdRrCL5gDF3Cqg01qSM3xuE7KiJCARIUb\n1YQiOQEV9Uc1+1H7l218XGXJglkRFvLwYWEyMzHPAVFiHYtuW7MHxbPM7dz9w9kN\nSeX6XAGAg0oG/NSYJfkw3rq2Zn7QE6f0U0WtxyOWnTbi/dtnBMvfRj+ikuHiGoVW\nMN26ZHwpcEMbtB2/i5Htj1nBswl5f0pdfUwTll8CgYEA4CWDjy4VeuiNFDyqAp2A\nk95ikKpvsM1f6hDD6Z51yVjoW4dy1TIw2u2hX/nBXcbiWrFE/lL3mYGHVgj3wBTW\nihSVA/DqUsGpplzoaU6YX0wNoURNEe2YaDfURqI8NBpo/JbCa3PWrdRtVJtWuv9W\nyoiSEUZ0RzsdE/+Q+U/EyzMCgYEAy8fSv1JrErXpz+Im4ACprBSyIlVF7PlXqbCQ\n18Z4Kyhd7XGjqJoin+hLKD3PT6Ocvzs1FN69ejsYXy/mzdr/S+0xIIl58rG/i/6f\n7h4C+bb5Fa0vZ2APhrCSwKoGpwZD9rn2NVl5bYqvpiMHuRUA5iqWC+iptLZT6Ywt\nsvzW2qsCgYEAsMOEy45ZLDNmxpXMsQFKm9Idwt5V9IUR5cHQ7lSjqOSvYTchDRZm\nxs/tmoWYw36LlWAE+9esIWevtd6emuEUC5KNraz47ciCJItSUXHE4ipU+V+ms8O+\nlDmq8wUQGzrUnpW5vwl8PFuw2K8kJ5Yj+NbY8jywiFgK53F8/8+zb1cCgYBvkkZ2\n7f8lzWfoo9+5AWPkjahCWAHjD1nJ1JxZJ5cfughDOtbqNwoCF0MfE0hwSBpIMXiM\npq+DPtvHMgjiaKciwQkG0X5tPJitY4nY66Gha2bRUXME3Hlju0V+KxldVXbcnVCK\nQSTUrvwgsElIMpG9c0+X0ZkpEjK7Sj6zIu/X5QKBgQCb4kEZx21OBJBJFbB9ewWP\nUoBs62BoSX4XTlLW19+4Nwu+xA8bckrRKrcEuqkoQaO4ZIGKuZOtvi4Ax4Jjgro3\nadQ7eih+Wy7lf7IPIm6CYulSiFeRJ3bp42ywFFf5U0hJYs+J4eDoEk/0haoo8IyG\nCv9RK6/PUOtJ5wAANRoJTA==\n-----END PRIVATE KEY-----\n",
      "client_email": "firebase-adminsdk-fbsvc@final-calling-pro.iam.gserviceaccount.com",
      "client_id": "108462056030768296459",
      "auth_uri": "https://accounts.google.com/o/oauth2/auth",
      "token_uri": "https://oauth2.googleapis.com/token",
      "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
      "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-fbsvc%40final-calling-pro.iam.gserviceaccount.com",
      "universe_domain": "googleapis.com"
    }
    ;
    List<String> scopes = [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/firebase.messaging"
    ];
    http.Client client = await auth.clientViaServiceAccount(
      auth.ServiceAccountCredentials.fromJson(serviceAccountJson),
      scopes,
    );
    auth.AccessCredentials credentials =
    await auth.obtainAccessCredentialsViaServiceAccount(
      auth.ServiceAccountCredentials.fromJson(serviceAccountJson),
      scopes,
      client,
    );
    client.close();
    print(
        "--------------------------------------------------------------------${credentials.accessToken.data}");
    return credentials.accessToken.data;
  }
  Future<void> sendFCMMessage(
      {required String title,
        required String body,
        required String fcm,
        required String type,/// "message","lead_share"
      }) async {
    final String serverKey = await getAccessToken();
    const String fcmEndpoint = 'https://fcm.googleapis.com/v1/projects/final-calling-pro/messages:send';
    final Map<String, dynamic> message = {
      'message': {
        'token': fcm,
        'notification': {'body': body, 'title': title},
        'data': {
          'type': type,
        },
      }
    };
    final http.Response response = await http.post(
      Uri.parse(fcmEndpoint),
      headers: <String, String>{
        'Content-Type': 'application/json',
        'Authorization': 'Bearer $serverKey',
      },
      body: jsonEncode(message),
    );
    if (response.statusCode == 200) {
      print('FCM message sent successfully');
    } else {
      print('Failed to send FCM message: ${response.statusCode}');
    }
  }
}
